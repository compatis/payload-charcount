name: Publish to npm
on:
  push:
    tags: ['v*.*.*']

permissions:
  contents: read
  id-token: write

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable Corepack (for pnpm)
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          scope: '@compatis'

      - name: Print pnpm & npm versions (sanity)
        run: |
          pnpm -v
          npm -v

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Ensure tag matches package.json version
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG="${GITHUB_REF_NAME#v}"
          if [ "$PKG_VERSION" != "$TAG" ]; then
            echo "Tag v$TAG does not match package.json version $PKG_VERSION"
            exit 1
          fi

      - name: Verify npm auth
        run: |
          npm config get registry
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run tests
        run: pnpm test || echo "Some tests may have failed - continuing with build"

      - name: Build
        run: pnpm build

      - name: Verify build
        run: |
          ls -la dist/
          node -e "console.log('Build verification passed')"

      - name: Dry run publish
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
